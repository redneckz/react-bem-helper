// @flow
import * as React from 'react';

export type Component<A> = React.AbstractComponent<A>;

export type DOMAttrs = {
    id?: string,
    className?: string,
    style?: { [string]: string },
    tabIndex?: string,
    type?: string,
    name?: string,
    value?: string,
    checked?: boolean,
    readOnly?: boolean,
    disabled?: boolean,
    accept?: string,
    autoComplete?: 'on' | 'off',
    autoFocus?: boolean,
    required?: boolean,
    htmlFor?: string,
    label?: string,
    title?: string,
    placeholder?: string,
    rows?: number,
    role?: string,
    lang?: string,
    inputmode?: string,
    list?: string,
    max?: string | number,
    maxLength?: string | number,
    min?: string | number,
    minLength?: string | number,
    multiple?: boolean,
    step?: string | number,
    pattern?: string,
    placeholder?: string,
    spellcheck?: boolean,
    width?: string | number,
    height?: string | number,
    onClick?: (SyntheticMouseEvent<any>) => any,
    onDoubleClick?: (SyntheticMouseEvent<any>) => any,
    onMouseDown?: (SyntheticMouseEvent<any>) => any,
    onMouseMove?: (SyntheticMouseEvent<any>) => any,
    onMouseUp?: (SyntheticMouseEvent<any>) => any,
    onMouseEnter?: (SyntheticMouseEvent<any>) => any,
    onMouseLeave?: (SyntheticMouseEvent<any>) => any,
    onMouseOver?: (SyntheticMouseEvent<any>) => any,
    onMouseOut?: (SyntheticMouseEvent<any>) => any,
    onDrag?: (SyntheticDragEvent<any>) => any,
    onDragEnd?: (SyntheticDragEvent<any>) => any,
    onDragEnter?: (SyntheticDragEvent<any>) => any,
    onDragExit?: (SyntheticDragEvent<any>) => any,
    onDragLeave?: (SyntheticDragEvent<any>) => any,
    onDragOver?: (SyntheticDragEvent<any>) => any,
    onDragStart?: (SyntheticDragEvent<any>) => any,
    onDrop?: (SyntheticDragEvent<any>) => any,
    onKeyDown?: (SyntheticKeyboardEvent<any>) => any,
    onKeyPress?: (SyntheticKeyboardEvent<any>) => any,
    onKeyUp?: (SyntheticKeyboardEvent<any>) => any,
    onChange?: (SyntheticEvent<any>) => any,
    onInput?: (SyntheticEvent<any>) => any,
    onInvalid?: (SyntheticEvent<any>) => any,
    onSubmit?: (SyntheticEvent<any>) => any,
    onTouchStart?: (SyntheticTouchEvent<any>) => any,
    onTouchMove?: (SyntheticTouchEvent<any>) => any,
    onTouchEnd?: (SyntheticTouchEvent<any>) => any,
    onTouchCancel?: (SyntheticTouchEvent<any>) => any,
    onFocus?: (SyntheticFocusEvent<any>) => any,
    onBlur?: (SyntheticFocusEvent<any>) => any,
    onScroll?: (SyntheticUIEvent<any>) => any,
    onWheel?: (SyntheticWheelEvent<any>) => any,
    onSelect?: (SyntheticEvent<any>) => any,
};

export type DOMComponent<Attrs = {}> = Component<{
    ...$Rest<Attrs, {}>,
    ...$Exact<DOMAttrs>,
}>;
